{"meta":{"title":"Hi, I'm Vanessa.","subtitle":"这是一片自由地。","description":"哈喽呀","author":"Vanessa Yao","url":"http://example.com","root":"/"},"pages":[{"title":"tags","date":"2021-12-03T10:26:53.000Z","updated":"2021-12-03T10:27:25.448Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"JWT在Django中的具体实现","slug":"JWT在Django中的具体实现","date":"2021-12-03T09:10:25.000Z","updated":"2021-12-03T10:47:04.618Z","comments":true,"path":"2021/12/03/JWT在Django中的具体实现/","link":"","permalink":"http://example.com/2021/12/03/JWT%E5%9C%A8Django%E4%B8%AD%E7%9A%84%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0/","excerpt":"","text":"记录一下，加深自己的理解。 什么是JWT？JWT是Json Web Token的缩写，可去官网查看更多。 简单说来，它和session干着一样的活，即身份认证。它保存在客户端，本质是一长串字符串，由header, payload和signature组成。 Why JWT not session? 使用session 存在CSRF攻击 session存在服务器端，无法适用分布式站点。 在Django中使用首先安装PyJWT 1pip install PyJWT models.py里建一张用户表，有用户名、密码等字段。 in views.py 1234567891011121314151617181920212223242526from .models import Userimport jwt, datetime, simplejson #导入def login(request): if request.method == &quot;POST&quot;: #接收json数据 username = simplejson.loads(request.body)[&#x27;username&#x27;] password = simplejson.loads(request.body)[&#x27;password&#x27;] #这里验证密码是否正确什么的我就先不写了 user = User.objects.filter(username=username).first() payload = &#123; #将该用户的id或username加入payload中 &quot;id&quot;: user.id, #过期时间，我这里写的是60分钟后过期 &quot;exp&quot;: datetime.datetime.utcnow() + datetime.timedelta(minutes=60), #生效时间，我这里写的是即刻生效 &quot;iat&quot;: datetime.datetime.utcnow() &#125; #将payload加密，我的密钥是&quot;secret&quot;(可以随便写) token = jwt.encode(payload, &quot;secret&quot;, algorithm=&#x27;HS256&#x27;).decode(&#x27;utf-8&#x27;) #将token返回 return JsonResponse(&#123;&#x27;jwt&#x27;: token, &#x27;msg&#x27;:&#x27;success&#x27;&#125;) else: return JsonResponse(&#123;&#x27;msg&#x27;: &#x27;wrong http method&#x27;&#125;) 123456789101112131415161718192021def user_info(request): if request.method == &quot;GET&quot;: #接收前端小伙伴放在HTTP头部的token #这样也避免了CSRF攻击 token = request.META.get(&#x27;HTTP_AUTHORIZATION&#x27;) if not token: msg = &#x27;not get token&#x27; try: #使用相同的密钥解密 payload = jwt.decode(token, &#x27;secret&#x27;, algorithms=[&#x27;HS256&#x27;]) #拿到用户id，从而完成用户认证 user = User.objects.get(id=payload[&#x27;id&#x27;]) msg = &#x27;get token, and I know you are &#x27; + user.username #也会存在异常 except jwt.ExpiredSignatureError: #如这里是token过期 msg = &#x27;token expired&#x27; except Exception as e: #还有其他过期类型，就不展开写了 msg = &quot;token invalid&quot; return JsonResponse(&#123;&#x27;token&#x27;: token, &#x27;msg&#x27;: msg&#125;) else: return JsonResponse(&#123;&#x27;msg&#x27;: &#x27;wrong http method&#x27;&#125;) 接口测试可用Postman， apifox等。 这只是一个小demo，实际运用中不可能每个需要身份认证的地方都写一遍（这么干也不是不行），所以考虑封装成装饰器。 这里我自我检讨一下，其实我装饰器并没有学会，只会照抄别人的代码。 改天再写一篇关于装饰器的博客。（立flag了） See you.","categories":[],"tags":[{"name":"code","slug":"code","permalink":"http://example.com/tags/code/"}]},{"title":"docker真他爹的难","slug":"docker真他爹的难","date":"2021-11-15T15:01:49.000Z","updated":"2021-11-15T15:04:08.234Z","comments":true,"path":"2021/11/15/docker真他爹的难/","link":"","permalink":"http://example.com/2021/11/15/docker%E7%9C%9F%E4%BB%96%E7%88%B9%E7%9A%84%E9%9A%BE/","excerpt":"","text":"万事开头难，真理啊。 难什么难？不难！这有什么难的，只是你不熟悉罢了。 好！很有精神！","categories":[],"tags":[{"name":"life","slug":"life","permalink":"http://example.com/tags/life/"}]},{"title":"怎么说呢，说就是不想考研了","slug":"怎么说呢，说就是不想考研了","date":"2021-10-11T00:23:28.000Z","updated":"2021-10-11T00:26:59.873Z","comments":true,"path":"2021/10/11/怎么说呢，说就是不想考研了/","link":"","permalink":"http://example.com/2021/10/11/%E6%80%8E%E4%B9%88%E8%AF%B4%E5%91%A2%EF%BC%8C%E8%AF%B4%E5%B0%B1%E6%98%AF%E4%B8%8D%E6%83%B3%E8%80%83%E7%A0%94%E4%BA%86/","excerpt":"","text":"我虽无意逐鹿，却知苍生苦楚。 我头铁，要去撞南墙了。","categories":[],"tags":[{"name":"life","slug":"life","permalink":"http://example.com/tags/life/"}]},{"title":"别焦虑呀","slug":"别焦虑呀","date":"2021-09-28T10:25:20.000Z","updated":"2021-11-16T05:15:21.070Z","comments":true,"path":"2021/09/28/别焦虑呀/","link":"","permalink":"http://example.com/2021/09/28/%E5%88%AB%E7%84%A6%E8%99%91%E5%91%80/","excerpt":"","text":"上了大三，上着一堆完全不想上的课，分不完的小组，做不完的pre。每天感觉快被书包压死。 综测成绩拉得一批，发展分啥也没有。每天都忙忙碌碌，睡个懒觉都觉得是一件奢侈的事情，但又感觉一事无成。 今天好像是保研结果查询。看别人晒。救命。 无论人生上到哪一台阶，阶下有人在仰望你，阶上有人在俯视你，你抬头自卑，低头自得，唯有平视，才能看见真实的自己。","categories":[],"tags":[{"name":"life","slug":"life","permalink":"http://example.com/tags/life/"}]},{"title":"haha","slug":"haha","date":"2021-09-01T03:31:34.000Z","updated":"2021-09-01T03:33:30.397Z","comments":true,"path":"2021/09/01/haha/","link":"","permalink":"http://example.com/2021/09/01/haha/","excerpt":"","text":"哈哈，写个屁，写狗屎。 就我从小到大没写过几篇笔记就能看出来，我能写个屁的博客。","categories":[],"tags":[{"name":"life","slug":"life","permalink":"http://example.com/tags/life/"}]},{"title":"暑假不学习我就狗带","slug":"暑假不学习我就狗带","date":"2021-06-27T06:04:16.000Z","updated":"2021-09-28T10:26:39.992Z","comments":true,"path":"2021/06/27/暑假不学习我就狗带/","link":"","permalink":"http://example.com/2021/06/27/%E6%9A%91%E5%81%87%E4%B8%8D%E5%AD%A6%E4%B9%A0%E6%88%91%E5%B0%B1%E7%8B%97%E5%B8%A6/","excerpt":"","text":"明天开始考第一门 七月六号回家 暑假不学习我就狗带，我杀我自己 把我的博客整得干干净净漂漂亮亮里里啥啥 争取写几篇有技术的吼吼","categories":[],"tags":[{"name":"life","slug":"life","permalink":"http://example.com/tags/life/"}]},{"title":"about machine learning","slug":"about-machine-learning","date":"2021-06-21T11:06:45.000Z","updated":"2021-06-21T11:12:12.854Z","comments":true,"path":"2021/06/21/about-machine-learning/","link":"","permalink":"http://example.com/2021/06/21/about-machine-learning/","excerpt":"","text":"I know nothing about it. I don’t know who give me the courage to choose this coure. Maybe Liang Jingru. At least, there is one good thing that I know I am not interested in machine learning and I am not suitable for it. Final exam is coming. Oh God!","categories":[],"tags":[{"name":"life","slug":"life","permalink":"http://example.com/tags/life/"}]},{"title":"尝试发布一条新帖子","slug":"尝试发布一条新帖子","date":"2021-06-20T03:19:23.000Z","updated":"2021-06-20T08:27:52.352Z","comments":true,"path":"2021/06/20/尝试发布一条新帖子/","link":"","permalink":"http://example.com/2021/06/20/%E5%B0%9D%E8%AF%95%E5%8F%91%E5%B8%83%E4%B8%80%E6%9D%A1%E6%96%B0%E5%B8%96%E5%AD%90/","excerpt":"I’m here.","text":"I’m here. Yesterday, I took the test four for English majors. It sucks. I’m struggling… Once upon a time, I thought I found the goal of my life. I was excited, and I never felt so close to what called success. But, I am just ordinary. Knowledge doesn’t come easliy. It won’t come to you just because you put the learning videos into favorites or you bought some books without reading. Set so many flags but all fall. hhh, keep fighting. I want a happy and rich life. I want to become nb.","categories":[],"tags":[{"name":"life","slug":"life","permalink":"http://example.com/tags/life/"}]},{"title":"寒假日常","slug":"寒假日常","date":"2021-02-07T16:23:46.000Z","updated":"2021-06-20T08:34:20.627Z","comments":true,"path":"2021/02/08/寒假日常/","link":"","permalink":"http://example.com/2021/02/08/%E5%AF%92%E5%81%87%E6%97%A5%E5%B8%B8/","excerpt":"","text":"第一天 刷手机 第二天 刷手机 第三天 刷手机 第四天 刷手机 第五天 刷手机 第六天 tmd, 烦死了。老子要学习！ 第七天 刷手机。。。","categories":[],"tags":[]},{"title":"hello world!","slug":"hello-world-1","date":"2021-01-31T07:17:39.000Z","updated":"2021-01-31T07:29:06.899Z","comments":true,"path":"2021/01/31/hello-world-1/","link":"","permalink":"http://example.com/2021/01/31/hello-world-1/","excerpt":"","text":"Hi. This is my first blog. I’m very excited.","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2021-01-31T06:55:53.353Z","updated":"2021-01-31T06:55:53.353Z","comments":true,"path":"2021/01/31/hello-world/","link":"","permalink":"http://example.com/2021/01/31/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"code","slug":"code","permalink":"http://example.com/tags/code/"},{"name":"life","slug":"life","permalink":"http://example.com/tags/life/"}]}